!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! REINFORCED CONCRETE BEAM FINAL DESIGN (TS500 CODE) V1.0
!
! CODED BY AHMET BAHADDIN ERSOZ
! NUMBER: 1824036
! CONTACT: ABERSOZ@GMAIL.COM
! DATE: 21.01.2013
!
! CE488 COMPUTER APPLICATIONS IN STRUCTURAL ENGINEERING
! INSTRUCTOR: PROF. DR. CETIN YILMAZ
!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! DECLARATIONS
! FLEXURE DESIGN PARAMETERS
INTEGER ST_GRADE(22), CO_GRADE(22), KL_LIST(22), KM_LIST(22), ST, CO, KL, KM, IS_BENTBAR, BAR_DIA_TOP(3), BAR_DIA_BOT(3) 
INTEGER BAR_DIA_TOP_EX(3), BAR_DIA_BOT_EX(3),BAR_AMNT_TOP(3), BAR_AMNT_BOT(3), BAR_AMNT_TOP_EX(3), BAR_AMNT_BOT_EX(3)
REAL MD(3), MD1(3), MD2(3), T, CCOVER, D, BW, H, JD, J, AS_REQ(3), AS_REQ_COMP(3), AS_DESIGN(3), AS_DESIGN_COMP(3) 
REAL MAKS_AS, MIN_AS, BAR_AREA(31), AS1, AS2, FYD, FCD, FCTD
!SHEAR DESIGN PARAMETERS
REAL VMAX, VCR, VC, ASW, ND, MIN_ASW_S, ASW_S, FYWD
INTEGER STR_DIA, S, S_SUPPORT
!SHORTNAME OF VARIABLES FOR PRINTING
INTEGER BRAT1, BRDT1, BRAT2, BRDT2, BRAT3, BRDT3
INTEGER BRAB1, BRDB1, BRAB2, BRDB2, BRAB3, BRDB3
INTEGER BRATE1, BRDTE1, BRATE2, BRDTE2, BRATE3, BRDTE3
INTEGER BRABE1, BRDBE1, BRABE2, BRDBE2, BRABE3, BRDBE3
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! READING FROM FILES 
! LIMITING VALUES KM AND KL WITH RESPECT TO STEEL AND CONCRETE GRADE TABLE 5.2 REINF.CONC. UGUR ERSOY P.228
OPEN(5, FILE='LIMITINGVALUES.txt')
DO 10 I=1,22
	READ(5,*) ST_GRADE(I), CO_GRADE(I), KM_LIST(I), KL_LIST(I) 
10 CONTINUE
! REINFORCEMENT BAR AREAS WITH RESPECT TO DIAMETER
OPEN(6, FILE='REINFAREAS.txt')
DO 40 I=1,31
	READ(6,*) BAR_AREA(I) 
40 CONTINUE
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! PROGRAM INPUTS
! FLEXURE DESIGN
PRINT*, 'THIS PROGRAM COMPUTES REQUIRED REINFORCEMENTS OF A BEAM FOR BENDING AND SHEAR ACCORDING TO TS500',
PRINT*, '/////////////////////////////////////////////////////////////////'
PRINT*, '////////PROGRAM INPUTS'
8 PRINT*, 'STEEL GRADE OF REBAR(IF S420, ENTER "420")='
READ*, ST
PRINT*, 'STEEL GRADE OF STIRRUPS (IF S220, ENTER "220")='
READ*, ST_STR
PRINT*, 'CONCRETE GRADE(IF C30, ENTER "30")='
READ*, CO
PRINT*, 'FLANGE THICKNESS (mm)='
READ*, T
PRINT*, 'CLEAR COVER (mm)='
READ*, CCOVER
PRINT*, 'SUPPORT 1 MOMENT (kNm, SHOULD BE NEGATIVE)='
READ*, MD(1)
PRINT*, 'SPAN MOMENT(kNm, SHOULD BE POSITIVE)='
READ*, MD(2)
PRINT*, 'SUPPORT 2 MOMENT (kNm, SHOULD BE NEGATIVE)='
READ*, MD(3)
PRINT*, 'DO YOU WANT TO USE BENTBAR (TYPE "1" FOR YES, TYPE "2" FOR NO)='
READ*, IS_BENTBAR
!SHEAR DESIGN
PRINT*, 'MAXIMIM SHEAR FORCE APPLIED TO BEAM (kN)='
READ*, VD
PRINT*, 'AXIAL FORCE (kN, IF THERE IS NO AXIAL FORCE ENTER "0", IF COMPRESSION ENTER WITH + SIGN, IF TENSION ENTER WITH - SIGN)='
READ*, ND
9 PRINT*, 'ASSUMED WIDTH OF BEAM (mm)='
READ*, BW
PRINT*, 'ASSUMED DEPTH OF BEAM (mm)='
READ*, H
PRINT*, '/////////////////////////////////////////////////////////////////'


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! FLEXURE DESIGN
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! PRIMARY CALCULATIONS
D=H-CCOVER !CALCULATES EFFECTIVE HEIGHT
FYD=ST/1.15 !REBAR STEEL DESIGN STRENGTH
FYWD=ST_STR/1.15 !STIRRUP STEEL DESIGN STRENGTH
FCD=CO/1.5 !CONCRETE COMPRESSIVE DESIGN STRENGTH
FCTD=0.35*(CO**0.5)/1.5 !CONCRETE TENSILE DESIGN STRENGTH
MIN_AS=(FCTD/FYD)*BW*D !MINIMUM REQUIRED REINFORCEMENT AREA
MAKS_AS=0.02*BW*D !MAXIMUM REINFORCEMENT AREA
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


! FINDS KM AND KL VALUES ACCORDING TO GIVEN STEEL AND CONCRETE GRADE FROM TABLE
N=0
DO 20 I=1,22
	IF(ST.EQ.ST_GRADE(I).AND.CO.EQ.CO_GRADE(I)) THEN
		KL= KL_LIST(I)
		KM= KM_LIST(I)
		N=N+1
	ENDIF
20 CONTINUE
IF(N.EQ.0) THEN
	PRINT*, 'STEEL GRADES CAN BE ONLY S220, S420, S500'
	PRINT*, 'CONCRETE GRADES CAN BE ONLY C16, C18, C20, C25, C30, C35, C40, C45, C50'
	GOTO 8
ENDIF


DO 30 N=1,3
	! GIVE STARTS FROM SPAN REINFORCEMENT TO SUPPORT REINFORCEMENT I.E. DETERMINES THE ORDER OF DESIGN
	IF(N.EQ.1) THEN
		I=2
		PRINT*, '////////SPAN REINFORCEMENT DESIGN'
	ELSEIF(N.EQ.2) THEN
		I=1 
		PRINT*, '////////SUPPORT 1 REINFORCEMENT DESIGN'
	ELSE
		I=3
		PRINT*, '////////SUPPORT 2 REINFORCEMENT DESIGN'
	ENDIF  
	!INITIAL VALUES
	BAR_DIA_BOT_EX(I)=0
	BAR_AMNT_BOT_EX(I)=0
	BAR_DIA_TOP_EX(I)=0
	BAR_AMNT_TOP_EX(I)=0   
	IF(MD(I).GT.0.0) THEN !FLANGED SECTIONS CALCULATIONS
		!INITIAL VALUES
		BAR_DIA_TOP(I)=0
		BAR_AMNT_TOP(I)=0    
		JD=MAX(0.9*D,(D-T*0.5)) 
		AS_REQ(I)=(MD(I)*1000000)/((FYD)*JD)	
		!MINIMUM&MAXIMUM REINFORCEMENT CONTROL    
		IF(AS_REQ(I).GT.MAKS_AS) THEN
			PRINT*, 'REQUIRED AREA IS GREATER THAN MAXIMUM AREA, CHANGE SIZE OF THE BEAM'
			GOTO 9
		ENDIF
		IF(AS_REQ(I).LT.MIN_AS) AS_REQ(I)=MIN_AS	
		PRINT*, 'REQUIRED BOTTOM REINFORCEMENT AREA=', AS_REQ(I), 'mm2'		
11  	AS_DESIGN(I)=0
		! USER SELECTS REBAR SIZE AND AMOUNT
		DO WHILE(AS_DESIGN(I).LT.AS_REQ(I))
			PRINT*, 'DIAMETER OF BAR YOU WANT TO USE (mm, IF 18 mm ENTER "18")='
			READ*, BAR_DIA_BOT(I)
			PRINT*, 'AMOUNT OF BAR YOU WANT TO USE='
			READ*, BAR_AMNT_BOT(I)
			AS_DESIGN(I)=BAR_AREA(BAR_DIA_BOT(I))*BAR_AMNT_BOT(I)
			PRINT*, 'REQUIRED BOTTOM REINFORCEMENT AREA=', AS_REQ(I), 'mm2'
			PRINT*, 'CALCULATED AREA=', AS_DESIGN(I), 'mm2'      
			IF(AS_DESIGN(I).LT.AS_REQ(I)) THEN
				PRINT*, 'AREA IS NOT ENOUGH, CHANGE BAR SIZE OR AMOUNT OF BAR' 
			ELSE
				PRINT*, 'REQUIRED AREA IS SATISFIED'
			ENDIF  
		ENDWHILE	
		PRINT*, 'IF YOU WANT TO CHANGE DIAMETER OR AMOUNT, TYPE "1", IF IT IS OKAY, TO CONTINUE DESIGN TYPE "2"'
		READ*, NN
		IF(NN.EQ.1) GOTO 11 
        ! ACCORDING TO BENTBAR USAGE, EXTENSION OF SPAN REBARS ARE DETERMINED	
		IF(IS_BENTBAR.EQ.1) THEN
			BAR_DIA_TOP(I-1)=BAR_DIA_BOT(I)
			BAR_DIA_TOP(I+1)=BAR_DIA_BOT(I)
			BAR_AMNT_TOP(I-1)=BAR_AMNT_BOT(I)
			BAR_AMNT_TOP(I+1)=BAR_AMNT_BOT(I)
			BAR_DIA_BOT(I-1)=31 !31 MM DIAMETER EQUALS ZERO AREA IN TXT FILE
			BAR_DIA_BOT(I+1)=31 !31 MM DIAMETER EQUALS ZERO AREA IN TXT FILE
			BAR_AMNT_BOT(I-1)=0
			BAR_AMNT_BOT(I+1)=0
		ELSE
			BAR_DIA_TOP(I-1)=31 !31 MM DIAMETER EQUALS ZERO AREA IN TXT FILE
			BAR_DIA_TOP(I+1)=31 !31 MM DIAMETER EQUALS ZERO AREA IN TXT FILE
			BAR_AMNT_TOP(I-1)=0
			BAR_AMNT_TOP(I+1)=0
			BAR_DIA_BOT(I-1)=BAR_DIA_BOT(I)
			BAR_DIA_BOT(I+1)=BAR_DIA_BOT(I)
			BAR_AMNT_BOT(I-1)=BAR_AMNT_BOT(I)
			BAR_AMNT_BOT(I+1)=BAR_AMNT_BOT(I)
		ENDIF             
	ELSE !RECTANGULAR SECTIONS CALCULATIONS    
		J=0.86 
		JD=J*D
		K=BW*D*D/(ABS(MD(I))*1000)
		IF(K.GT.KL) THEN !NO NEED COMPRESSION STEEL	
        	PRINT*, 'SINGLE REINFORCEMENT BEAM'	
            PRINT*, 'YOU DO NOT NEED TO USE COMPRESSION STEEL'
			AS_REQ(I)=(ABS(MD(I))*1000000)/((FYD)*JD)  
			!MINIMUM&MAXIMUM REINFORCEMENT CONTROL    
			IF(AS_REQ(I).GT.MAKS_AS) THEN
				PRINT*, 'REQUIRED AREA IS GREATER THAN MAXIMUM AREA, CHANGE SIZE OF THE BEAM'
				GOTO 9
			ENDIF
			IF(AS_REQ(I).LT.MIN_AS) AS_REQ(I)=MIN_AS
			PRINT*, 'REQUIRED TOP REINFORCEMENT AREA=', AS_REQ(I), 'mm2'     
			AS_DESIGN(I)=BAR_AREA(BAR_DIA_TOP(I))*BAR_AMNT_TOP(I)		
			IF(AS_DESIGN(I).EQ.0.0) THEN !IF BENTBAR IS NOT USED			
				PRINT*, 'SINCE BENTBAR IS NOT USED, THERE IS NO AVAILABLE TOP REINFORCEMENT, YOU SHOULD ASSIGN'
12     			AS_DESIGN(I)=0
				! USER SELECTS REBAR SIZE AND AMOUNT
				DO WHILE(AS_DESIGN(I).LT.AS_REQ(I))          
					PRINT*, 'DIAMETER OF BAR YOU WANT TO USE (mm, IF 18 mm ENTER "18")='
					READ*, BAR_DIA_TOP(I)
					PRINT*, 'AMOUNT OF BAR YOU WANT TO USE='
					READ*, BAR_AMNT_TOP(I)
					AS_DESIGN(I)=BAR_AREA(BAR_DIA_TOP(I))*BAR_AMNT_TOP(I)
					PRINT*, 'REQUIRED TOP REINFORCEMENT AREA=', AS_REQ(I), 'mm2'
					PRINT*, 'CALCULATED AREA=', AS_DESIGN(I), 'mm2'      
					IF(AS_DESIGN(I).LT.AS_REQ(I)) THEN
						PRINT*, 'AREA IS NOT ENOUGH, CHANGE BAR SIZE OR AMOUNT OF BAR' 
					ELSE
						PRINT*, 'REQUIRED AREA IS SATISFIED'
					ENDIF  
				ENDWHILE
				PRINT*, 'IF YOU WANT TO CHANGE DIAMETER AND AMOUNT TYPE "1", IF IT IS OKAY TYPE "2"'
				READ*, NN
				IF(NN.EQ.1) GOTO 12 				
			ELSE !IF BENTBAR IS USED			
				PRINT*, 'AVAILABLE REINFORCEMENT AREA=', AS_DESIGN(I), 'mm2' 
				PRINT*, BAR_AMNT_TOP(I), '-',  BAR_DIA_TOP(I), 'mm'
				IF(AS_DESIGN(I).GT.AS_REQ(I)) THEN 
					PRINT*, 'REQUIRED AREA IS SATISFIED.'
				ELSE
					PRINT*, 'AREA IS NOT ENOUGH, ADDITIONAL REINFORCEMENT IS REQUIRED' 					
					DO WHILE(AS_DESIGN(I).LT.AS_REQ(I))
						AS_DESIGN(I)=BAR_AREA(BAR_DIA_TOP(I))*BAR_AMNT_TOP(I)
						PRINT*, 'DIAMETER OF BAR YOU WANT TO ADD (mm, IF 18 mm ENTER "18")='
						READ*, BAR_DIA_TOP_EX(I)
						PRINT*, 'AMOUNT OF BAR YOU WANT TO ADD='
						READ*, BAR_AMNT_TOP_EX(I)
						AS_DESIGN(I)=AS_DESIGN(I)+BAR_AREA(BAR_DIA_TOP_EX(I))*BAR_AMNT_TOP_EX(I)
						PRINT*, 'REQUIRED TOP REINFORCEMENT AREA=', AS_REQ(I), 'mm2'
						PRINT*, 'CALCULATED AREA=', AS_DESIGN(I), 'mm2'      
						IF(AS_DESIGN(I).LT.AS_REQ(I)) THEN
							PRINT*, 'AREA IS NOT ENOUGH, MORE ADDITIONAL REINFORCEMENT IS REQUIRED' 
						ELSE
							PRINT*, 'REQUIRED AREA IS SATISFIED'
						ENDIF  
					ENDWHILE 					
				ENDIF
			ENDIF      
		ELSE 
			IF(K.LT.KM) THEN
				PRINT*, 'CHANGE THE SIZE OF BEAM'
				GOTO 9
			ELSE !COMPRESSION STEEL IS REQUIRED
            	PRINT*, 'DOUBLE REINFORCEMENT BEAM'
				PRINT*, 'YOU NEED TO USE COMPRESSION STEEL'
				MD1(I)=(BW*D*D/KL)/1000      
				MD2(I)=ABS(MD(I))-MD1(I)
				AS1=(MD1(I)*1000000)/(FYD*JD)
				AS2=(MD2(I)*1000000)/(FYD*(D-CCOVER))
				AS_REQ(I)=AS1+AS2
				AS_REQ_COMP(I)=AS2        
				PRINT*, 'TOP REINFORCEMENT'
				!SUPPORT TOP REINFORCEMENT
				IF(AS_REQ(I).GT.MAKS_AS) THEN
					PRINT*, 'REQUIRED AREA IS GREATER THAN MAXIMUM AREA, CHANGE SIZE OF THE BEAM'
					GOTO 9
				ENDIF
				IF(AS_REQ(I).LT.MIN_AS) AS_REQ(I)=MIN_AS				
				PRINT*, 'REQUIRED TOP REINFORCEMENT AREA=', AS_REQ(I), 'mm2' 
				AS_DESIGN(I)=BAR_AREA(BAR_DIA_TOP(I))*BAR_AMNT_TOP(I)        
				IF(AS_DESIGN(I).EQ.0.0) THEN !IF BENTBAR IS NOT USED				
					PRINT*, 'BENTBAR IS NOT USED, NO AVAILABLE TOP REINF, ASSIGN NEW'
13        			AS_DESIGN(I)=0
					! USER SELECTS REBAR SIZE AND AMOUNT
					DO WHILE(AS_DESIGN(I).LT.AS_REQ(I))          
						PRINT*, 'DIAMETER OF BAR YOU WANT TO USE (mm, IF 18 mm ENTER "18")='
						READ*, BAR_DIA_TOP(I)
						PRINT*, 'AMOUNT OF BAR YOU WANT TO USE='
						READ*, BAR_AMNT_TOP(I)
						AS_DESIGN(I)=BAR_AREA(BAR_DIA_TOP(I))*BAR_AMNT_TOP(I)
						PRINT*, 'REQUIRED TOP REINFORCEMENT AREA=', AS_REQ(I), 'mm2'
						PRINT*, 'CALCULATED AREA=', AS_DESIGN(I), 'mm2'      
						IF(AS_DESIGN(I).LT.AS_REQ(I)) THEN
							PRINT*, 'AREA IS NOT ENOUGH, CHANGE BAR SIZE OR AMOUNT' 
						ELSE
							PRINT*, 'REQUIRED AREA IS SATISFIED'
						ENDIF  
					ENDWHILE
					PRINT*, 'IF YOU WANT TO CHANGE DIAMETER AND AMOUNT TYPE "1", IF IT IS OKAY TYPE "2"'
					READ*, NN
					IF(NN.EQ.1) GOTO 13					
				ELSE !IF BENTBAR IS USED
					PRINT*, 'AVAILABLE REINFORCEMENT AREA=', AS_DESIGN(I), 'mm2' 
					PRINT*, BAR_AMNT_TOP(I), '-',  BAR_DIA_TOP(I), 'mm'
					IF(AS_DESIGN(I).GT.AS_REQ(I)) THEN 
						PRINT*, 'REQUIRED AREA IS SATISFIED.'
					ELSE
						PRINT*, 'AREA IS NOT ENOUGH, ADDITIONAL REINFORCEMENT IS REQUIRED' 
						DO WHILE(AS_DESIGN(I).LT.AS_REQ(I))
							AS_DESIGN(I)=BAR_AREA(BAR_DIA_TOP(I))*BAR_AMNT_TOP(I)
							PRINT*, 'DIAMETER OF BAR YOU WANT TO ADD (mm, IF 18 mm ENTER "18")='
							READ*, BAR_DIA_TOP_EX(I)
							PRINT*, 'AMOUNT OF BAR YOU WANT TO ADD='
							READ*, BAR_AMNT_TOP_EX(I)
							AS_DESIGN(I)=AS_DESIGN(I)+BAR_AREA(BAR_DIA_TOP_EX(I))*BAR_AMNT_TOP_EX(I)
							PRINT*, 'REQUIRED TOP REINFORCEMENT AREA=', AS_REQ(I), 'mm2'
							PRINT*, 'CALCULATED AREA=', AS_DESIGN(I), 'mm2'      
							IF(AS_DESIGN(I).LT.AS_REQ(I)) THEN
								PRINT*, 'AREA IS NOT ENOUGH, ADD MORE REINFORCEMENT"' 
							ELSE
								PRINT*, 'REQUIRED AREA IS SATISFIED'
							ENDIF  
						ENDWHILE   
					ENDIF
				ENDIF   
				PRINT*, 'BOTTOM REINFORCEMENT'
				!SUPPORT BOTTOM REINFORCEMENT			
				PRINT*, 'REQUIRED BOTTOM REINFORCEMENT AREA=', AS_REQ_COMP(I), 'mm2' 
				AS_DESIGN_COMP(I)=BAR_AREA(BAR_DIA_BOT(I))*BAR_AMNT_BOT(I)        
				IF(AS_DESIGN_COMP(I).EQ.0.0) THEN !IF BENTBAR IS USED
					PRINT*, 'BENTBAR IS USED, NO AVAILABLE BOTTOM REINF, ASSIGN NEW'
14        			AS_DESIGN_COMP(I)=0
					! USER SELECTS REBAR SIZE AND AMOUNT
					DO WHILE(AS_DESIGN_COMP(I).LT.AS_REQ_COMP(I))          
						PRINT*, 'DIAMETER OF BAR YOU WANT TO USE (mm, IF 18 mm ENTER "18")='
						READ*, BAR_DIA_BOT(I)
						PRINT*, 'AMOUNT OF BAR YOU WANT TO USE='
						READ*, BAR_AMNT_BOT(I)
						AS_DESIGN_COMP(I)=BAR_AREA(BAR_DIA_BOT(I))*BAR_AMNT_BOT(I)
						PRINT*, 'REQUIRED TOP REINFORCEMENT AREA=', AS_REQ_COMP(I), 'mm2'
						PRINT*, 'CALCULATED AREA=', AS_DESIGN_COMP(I), 'mm2'      
						IF(AS_DESIGN_COMP(I).LT.AS_REQ_COMP(I)) THEN
							PRINT*, 'AREA IS NOT ENOUGH, CHANGE BAR SIZE OR AMOUNT' 
						ELSE
							PRINT*, 'REQUIRED AREA IS SATISFIED'
						ENDIF  
					ENDWHILE
					PRINT*, 'IF YOU WANT TO CHANGE DIAMETER AND AMOUNT TYPE "1", IF IT IS OKAY TYPE "2"'
					READ*, NN
					IF(NN.EQ.1) GOTO 14					
				ELSE !IF BENTBAR IS NOT USED
					PRINT*, 'AVAILABLE REINFORCEMENT AREA=', AS_DESIGN_COMP(I), 'mm2' 
					PRINT*, BAR_AMNT_BOT(I), '-',  BAR_DIA_BOT(I), 'mm'
					IF(AS_DESIGN_COMP(I).GT.AS_REQ_COMP(I)) THEN 
						PRINT*, 'REQUIRED AREA IS SATISFIED.'
					ELSE
						PRINT*, 'AREA IS NOT ENOUGH, ADDITIONAL REINFORCEMENT IS REQUIRED' 
						DO WHILE(AS_DESIGN_COMP(I).LT.AS_REQ_COMP(I))
							AS_DESIGN_COMP(I)=BAR_AREA(BAR_DIA_BOT(I))*BAR_AMNT_BOT(I)
							PRINT*, 'DIAMETER OF BAR YOU WANT TO ADD (mm, IF 18 mm ENTER "18")='
							READ*, BAR_DIA_BOT_EX(I)
							PRINT*, 'AMOUNT OF BAR YOU WANT TO ADD='
							READ*, BAR_AMNT_BOT_EX(I)    
                            NNN=BAR_AMNT_BOT_EX(I) !BURASI D�ZELTLECEK                      
							AS_DESIGN_COMP(I)=AS_DESIGN_COMP(I)+BAR_AREA(BAR_DIA_BOT_EX(I))*NNN
							PRINT*, 'REQUIRED TOP REINFORCEMENT AREA=', AS_REQ_COMP(I), 'mm2'
							PRINT*, 'CALCULATED AREA=', AS_DESIGN_COMP(I), 'mm2'      
							IF(AS_DESIGN_COMP(I).LT.AS_REQ_COMP(I)) THEN
								PRINT*, 'AREA IS NOT ENOUGH, ADD MORE REINFORCEMENT"' 
							ELSE
								PRINT*, 'REQUIRED AREA IS SATISFIED'
							ENDIF  
						ENDWHILE   
					ENDIF
				ENDIF                 
			ENDIF
		ENDIF
	ENDIF
PRINT*, '/////////////////////////////////////////////////////////////////'
30 CONTINUE

! IF THERE IS NO TOP OR BOTTOM REINFORCEMENT, HANGER BARS SHOULD BE USED FOR PLACING OF STIRRUPS
DO 100 I=1,3
	IF(BAR_AMNT_TOP(I).EQ.0) THEN
    	BAR_AMNT_TOP(I)=2
        BAR_DIA_TOP(I)=12
    ENDIF
    IF(BAR_AMNT_BOT(I).EQ.0) THEN
    	BAR_AMNT_BOT(I)=2
        BAR_DIA_BOT(I)=12
    ENDIF
100 CONTINUE

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! SHEAR DESIGN
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

PRINT*, '/////////////////////////////////////////////////////////////////'
PRINT*, '////////////////// STIRRUP CALCULATIONS'

! CRACKING SHEAR CALCULATIONS ACCORDING TO AXIAL LOAD
IF(ND.GT.0.0) VCR=(0.65*FCTD*BW*D/1000)*(1+0.07*(ND*1000/(BW*H))) !IF BEAM IS UNDER COMPRESSION
IF(ND.LT.0.0) VCR=(0.65*FCTD*BW*D/1000)*(1-0.3*(ND*1000/(BW*H))) !IF BEAM IS UNDER TENSION
IF(ND.EQ.0.0) VCR=0.65*FCTD*BW*D/1000 !IF THERE IS NO AXIAL LOAD
VMAX=0.22*FCD*BW*D/1000
MIN_ASW_S=0.3*(FCTD/FYWD)*BW !MINIMUM REINFORCEMENT AREA REQUIREMENT
IF(VD.GT.VMAX) THEN
	PRINT*, 'CHANGE THE SIZE OF BEAM'
	GOTO 9
ELSEIF(VD.LE.VCR) THEN
	!MINIMUM SHEAR REINFORCEMENT SHOULD BE USED
    PRINT*, 'USE MINIMUM REINFORCEMENT'
    ASW_S=MIN_ASW_S    
ELSE
    VC=0.8*VCR    
    ASW_S=(VD-VC)/((FYWD/1000)*D)    
    IF(ASW_S.LT.MIN_ASW_S) ASW_S=MIN_ASW_S  
ENDIF
PRINT*, 'SELECT DIAMETER OF STIRRUP (mm, IF 8 mm ENTER "8")='  
READ*, STR_DIA
ASW=2*BAR_AREA(STR_DIA)  
S=ASW/ASW_S
IF(S.GT.(D/2)) S=D/2
PRINT*, 'CALCULATED SPACING BETWEEN STIRRUPS IN THE SPAN=', S, 'mm'
PRINT*, 'IN THE SPAN, ENTER ROUNDED SPACING LESS THAN CALCULATED (mm)='
READ*, S    
S_SUPPORT=S/2
PRINT*, 'CALCULATED SPACING BETWEEN STIRRUPS NEAR THE SUPPORT', S_SUPPORT,  'mm'
PRINT*, 'NEAR THE SUPPORT_ENTER ROUNDED SPACING LESS THAN CALCULATED (mm)='
READ*, S_SUPPORT

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! REINFORCEMENT DETAILS
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! 
! SINCE FORMATTED OUTPUT ROW CHARACTER LIMIT EXCEEDED, VARIABLE NAMES WERE SHORTED
BRAT1=BAR_AMNT_TOP(1)
BRDT1=BAR_DIA_TOP(1)
BRAT2=BAR_AMNT_TOP(2)
BRDT2=BAR_DIA_TOP(2)
BRAT3=BAR_AMNT_TOP(3)
BRDT3=BAR_DIA_TOP(3)
BRAB1=BAR_AMNT_BOT(1)
BRDB1=BAR_DIA_BOT(1)
BRAB2=BAR_AMNT_BOT(2)
BRDB2=BAR_DIA_BOT(2)
BRAB3=BAR_AMNT_BOT(3)
BRDB3=BAR_DIA_BOT(3)
BRATE1=BAR_AMNT_TOP_EX(1)
BRDTE1=BAR_DIA_TOP_EX(1)
BRATE2=BAR_AMNT_TOP_EX(2)
BRDTE2=BAR_DIA_TOP_EX(2)
BRATE3=BAR_AMNT_TOP_EX(3)
BRDTE3=BAR_DIA_TOP_EX(3)
BRABE1=BAR_AMNT_BOT_EX(1)
BRDBE1=BAR_DIA_BOT_EX(1)
BRABE2=BAR_AMNT_BOT_EX(2)
BRDBE2=BAR_DIA_BOT_EX(2)
BRABE3=BAR_AMNT_BOT_EX(3)
BRDBE3=BAR_DIA_BOT_EX(3)
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! 
68 FORMAT(A43)
WRITE(*, 68) '-------------------------------------------'
67 FORMAT(A35)
WRITE(*,67) 'REINFORCEMENT DETAILS'
WRITE(*, 68) '-------------------------------------------'
69 FORMAT(9X,A1,1X,A8,1X,A1,3X,A4,3X,A1,1X,A8,1X,A1)
WRITE(*,69) '|', 'SUPPORT1', '|', 'SPAN', '|', 'SUPPORT2', '|'
WRITE(*, 68) '-------------------------------------------'
66 FORMAT(5X,A3,1X,A1,I4,A2,I2,2X,A1,I4,A2,I2,2X,A1,I4,A2,I2,2X,A1)
WRITE(*,66) 'TOP', '|', BRAT1, '-#', BRDT1, '|', BRAT2, '-#', BRDT2, '|', BRAT3, '-#', BRDT3, '|'
WRITE(*, 68) '-------------------------------------------'
IF(BAR_AMNT_TOP_EX(1).GT.0.OR.BAR_AMNT_TOP_EX(2).GT.0.OR.BAR_AMNT_TOP_EX(3).GT.0) THEN
  	DO 88 I=1,3
    	IF(BAR_DIA_TOP_EX(I).EQ.31) BAR_DIA_TOP_EX(I)=0 
    88 CONTINUE 
	71 FORMAT(3X,A5,1X,A1,I4,A2,I2,2X,A1,I4,A2,I2,2X,A1,I4,A2,I2, 2X, A1)
	WRITE(*,71) 'EXTRA', '|', BRATE1, '-#', BRDTE1, '|', BRATE2, '-#', BRDTE2, '|', BRATE3, '-#', BRDTE3, '|' 
	WRITE(*, 68) '-------------------------------------------'
ENDIF
72 FORMAT(2X,A6,1X,A1,I4,A2,I2,2X,A1,I4,A2,I2,2X,A1,I4,A2,I2, 2X, A1)
WRITE(*,72) 'BOTTOM', '|', BRAB1, '-#', BRDB1, '|', BRAB2, '-#', BRDB2, '|', BRAB3, '-#', BRDB3, '|' 
WRITE(*, 68) '-------------------------------------------'
IF(BAR_AMNT_BOT_EX(1).GT.0.OR.BAR_AMNT_BOT_EX(2).GT.0.OR.BAR_AMNT_BOT_EX(3).GT.0) THEN
  	DO 83 I=1,3
    	IF(BAR_DIA_BOT_EX(I).EQ.31) BAR_DIA_BOT_EX(I)=0 
    83 CONTINUE 
	WRITE(*,71) 'EXTRA', '|', BRABE1, '-#', BRDBE1, '|', BRABE2, '-#', BRDBE2, '|', BRABE3, '-#', BRDBE3, '|' 
	WRITE(*, 68) '-------------------------------------------'
ENDIF
73 FORMAT(1X,A7,1X,A1,1X,A1,I2,A1,I3,2X,A1,1X,A1,I2,A1,I3,2X,A1,1X,A1,I2,A1,I3,2X,A1)
WRITE(*,73) 'STIRRUP', '|', '#', STR_DIA, '/', S_SUPPORT, '|', '#', STR_DIA, '/', S, '|', '#', STR_DIA, '/', S_SUPPORT, '|'
WRITE(*, 68) '-------------------------------------------'

END